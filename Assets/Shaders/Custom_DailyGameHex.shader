//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Custom/DailyGameHex" {
Properties {
_MainTex ("AOTex", 2D) = "white" { }
_LightTex ("LightTex", 2D) = "white" { }
_OutlineCol ("OutlineCol", Color) = (1,0,0,1)
_OutlineFactor ("OutlineFactor", Range(0, 1)) = 0.5
_MainTexCol ("模型贴图染色", Color) = (1,1,1,1)
_UnLock ("是否解锁", Float) = 1
}
SubShader {
 LOD 100
 Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" }
 Pass {
  LOD 100
  Tags { "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Geometry" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
  GpuProgramID 64555
Program "vp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_NORMAL0.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
lowp vec4 u_xlat10_1;
bool u_xlatb1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
vec4 u_xlat3;
mediump vec4 u_xlat16_3;
lowp vec4 u_xlat10_3;
vec4 u_xlat4;
mediump vec4 u_xlat16_4;
vec3 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump vec4 u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat9;
float u_xlat10;
vec3 u_xlat14;
float u_xlat19;
float u_xlat28;
void main()
{
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9 + _DarkContrastRatio;
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat10_1 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat1 = vec4(u_xlat9) * u_xlat10_1;
    u_xlat16_2.x = (-_UnLock) + 1.0;
    u_xlat16_3 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_2 = _DirLightShadowColorLock * u_xlat16_2.xxxx + u_xlat16_3;
    u_xlat16_3.x = (-u_xlat16_2.w) + 1.0;
    u_xlat0.x = u_xlat0.x + u_xlat16_3.x;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9 = (-u_xlat0.x) + 1.0;
    u_xlat3 = u_xlat16_2 * vec4(u_xlat9);
    u_xlat2 = u_xlat16_2.wwww * u_xlat3;
    u_xlat10_3 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3 = u_xlat10_3.wwww * u_xlat10_3;
    u_xlat4 = u_xlat16_3 * _LightColor0;
    u_xlat0 = u_xlat4 * u_xlat0.xxxx + u_xlat2;
    u_xlat0 = u_xlat1 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat2.w = vs_TEXCOORD2.w;
    u_xlat4 = (-u_xlat2) + SpotLightPos1;
    u_xlat5.xyz = u_xlat4.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat4.xxx + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat4.zzz + u_xlat5.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat4.www + u_xlat4.xyz;
    u_xlat28 = dot(u_xlat4.xyz, u_xlat4.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat4.xyz = vec3(u_xlat28) * u_xlat4.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat4.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle1;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_4 = u_xlat16_3 * SpotLightColor1;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_4;
    u_xlat4 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat4;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_4 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_4.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos2;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle2;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor2;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat28 = dot(u_xlat1, u_xlat1);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = (-u_xlat2) + SpotLightPos3;
    u_xlat14.xyz = u_xlat7.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat7.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat7.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat7.www + u_xlat14.xyz;
    u_xlat28 = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat14.xyz;
    u_xlat1.x = dot(u_xlat1.xyz, u_xlat14.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle3;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor3;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat2) + SpotLightPos4;
    u_xlat2 = (-u_xlat2) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat7;
    u_xlat7 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat7;
    u_xlat28 = dot(u_xlat7, u_xlat7);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat7.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle4;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_7 = u_xlat16_3 * SpotLightColor4;
    u_xlat1 = u_xlat1.xxxx * u_xlat16_7;
    u_xlat7 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat1.xyz = u_xlat2.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat2.xxx + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat2.zzz + u_xlat1.xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat2.www + u_xlat1.xyz;
    u_xlat28 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat1.xyz = vec3(u_xlat28) * u_xlat1.xyz;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat2;
    u_xlat28 = dot(u_xlat2, u_xlat2);
    u_xlat28 = inversesqrt(u_xlat28);
    u_xlat14.xyz = vec3(u_xlat28) * u_xlat2.xyz;
    u_xlat1.x = dot(u_xlat14.xyz, u_xlat1.xyz);
    u_xlat10 = abs(u_xlat1.x) * -0.0187292993 + 0.0742610022;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + -0.212114394;
    u_xlat10 = u_xlat10 * abs(u_xlat1.x) + 1.57072878;
    u_xlat19 = -abs(u_xlat1.x) + 1.0;
    u_xlatb1 = u_xlat1.x<(-u_xlat1.x);
    u_xlat19 = sqrt(u_xlat19);
    u_xlat28 = u_xlat19 * u_xlat10;
    u_xlat28 = u_xlat28 * -2.0 + 3.14159274;
    u_xlat1.x = u_xlatb1 ? u_xlat28 : float(0.0);
    u_xlat1.x = u_xlat10 * u_xlat19 + u_xlat1.x;
    u_xlat1.x = (-u_xlat1.x) * 57.2957802 + SpotLightAngle5;
    u_xlat1.x = max(u_xlat1.x, 0.0);
    u_xlat16_2 = u_xlat16_3 * SpotLightColor5;
    u_xlat3 = u_xlat16_3 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat1.xxxx * u_xlat16_2;
    u_xlat1 = u_xlat3 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 100

uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
attribute highp vec4 in_POSITION0;
attribute highp vec2 in_TEXCOORD0;
attribute highp vec3 in_NORMAL0;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_NORMAL0.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2 = u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToShadow[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToShadow[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToShadow[3] * u_xlat0.wwww + u_xlat1;
    return;
}

#endif
#ifdef FRAGMENT
#version 100

#ifdef GL_FRAGMENT_PRECISION_HIGH
    precision highp float;
#else
    precision mediump float;
#endif
precision highp int;
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _MainTexCol;
uniform 	float _BrightContrastRatio;
uniform 	float _DarkContrastRatio;
uniform 	float _LightTexBrightness;
uniform 	mediump vec4 _DirLightShadowColorUnLock;
uniform 	mediump vec4 _DirLightShadowColorLock;
uniform 	mediump vec4 SpotLightColor1;
uniform 	mediump vec4 SpotLightColor2;
uniform 	mediump vec4 SpotLightColor3;
uniform 	mediump vec4 SpotLightColor4;
uniform 	mediump vec4 SpotLightColor5;
uniform 	vec4 SpotLightPos1;
uniform 	vec4 SpotLightPos2;
uniform 	vec4 SpotLightPos3;
uniform 	vec4 SpotLightPos4;
uniform 	vec4 SpotLightPos5;
uniform 	vec4 SpotLightDir1;
uniform 	vec4 SpotLightDir2;
uniform 	vec4 SpotLightDir3;
uniform 	vec4 SpotLightDir4;
uniform 	vec4 SpotLightDir5;
uniform 	float SpotLightAngle1;
uniform 	float SpotLightAngle2;
uniform 	float SpotLightAngle3;
uniform 	float SpotLightAngle4;
uniform 	float SpotLightAngle5;
uniform 	float SpotLightBrightness1;
uniform 	float SpotLightBrightness2;
uniform 	float SpotLightBrightness3;
uniform 	float SpotLightBrightness4;
uniform 	float SpotLightBrightness5;
uniform 	mediump float SpotType1;
uniform 	mediump float SpotType2;
uniform 	mediump float SpotType3;
uniform 	mediump float SpotType4;
uniform 	mediump float SpotType5;
uniform 	int spotLightCount;
uniform 	mediump float _UnLock;
uniform lowp sampler2D _MainTex;
uniform lowp sampler2D _LightTex;
uniform highp sampler2D _ShadowMapTexture;
varying highp vec2 vs_TEXCOORD0;
varying highp vec3 vs_NORMAL0;
varying highp vec4 vs_TEXCOORD2;
varying highp vec4 vs_TEXCOORD3;
#define SV_Target0 gl_FragData[0]
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
bool u_xlatb0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
mediump vec4 u_xlat16_2;
lowp vec4 u_xlat10_2;
bool u_xlatb2;
vec4 u_xlat3;
bool u_xlatb3;
mediump vec4 u_xlat16_4;
lowp vec4 u_xlat10_4;
vec4 u_xlat5;
bool u_xlatb5;
vec4 u_xlat6;
bvec4 u_xlatb6;
vec4 u_xlat7;
mediump float u_xlat16_8;
vec3 u_xlat9;
mediump float u_xlat16_10;
float u_xlat11;
float u_xlat12;
vec3 u_xlat14;
bool u_xlatb14;
float u_xlat18;
float u_xlat20;
float u_xlat21;
float u_xlat23;
float u_xlat29;
float u_xlat30;
float u_xlat32;
void main()
{
    u_xlat0.x = texture2D(_ShadowMapTexture, vs_TEXCOORD3.xy).x;
    u_xlatb0 = vs_TEXCOORD3.z<u_xlat0.x;
    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);
    u_xlat0.x = max(u_xlat0.x, _LightShadowData.x);
    u_xlat16_1.x = (-u_xlat0.x) + 1.0;
    u_xlat2.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat2.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat2.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat3.xyz = vs_TEXCOORD2.xyz + hlslcc_mtx4x4unity_ObjectToWorld[3].xyz;
    u_xlat9.xyz = (-u_xlat3.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat9.x = dot(u_xlat9.xyz, u_xlat2.xyz);
    u_xlat2.xyz = u_xlat3.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat18 = dot(u_xlat2.xyz, u_xlat2.xyz);
    u_xlat18 = sqrt(u_xlat18);
    u_xlat18 = (-u_xlat9.x) + u_xlat18;
    u_xlat9.x = unity_ShadowFadeCenterAndType.w * u_xlat18 + u_xlat9.x;
    u_xlat9.x = u_xlat9.x * _LightShadowData.z + _LightShadowData.w;
    u_xlat9.x = clamp(u_xlat9.x, 0.0, 1.0);
    u_xlat16_1.x = u_xlat9.x * u_xlat16_1.x + u_xlat0.x;
    u_xlat0.x = dot(_WorldSpaceLightPos0.xyz, vs_NORMAL0.xyz);
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-_DarkContrastRatio) + _BrightContrastRatio;
    u_xlat0.x = u_xlat0.x * u_xlat9.x + _DarkContrastRatio;
    u_xlat9.x = (-u_xlat16_1.x) * u_xlat0.x + 1.0;
    u_xlat10_2 = texture2D(_LightTex, vs_TEXCOORD0.xy);
    u_xlat2 = u_xlat9.xxxx * u_xlat10_2;
    u_xlat16_10 = (-_UnLock) + 1.0;
    u_xlat16_4 = _DirLightShadowColorUnLock * vec4(_UnLock);
    u_xlat16_4 = _DirLightShadowColorLock * vec4(u_xlat16_10) + u_xlat16_4;
    u_xlat16_10 = (-u_xlat16_4.w) + 1.0;
    u_xlat0.x = u_xlat16_1.x * u_xlat0.x + u_xlat16_10;
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
    u_xlat9.x = (-u_xlat0.x) + 1.0;
    u_xlat1 = u_xlat16_4 * u_xlat9.xxxx;
    u_xlat1 = u_xlat16_4.wwww * u_xlat1;
    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_4 = u_xlat10_4.wwww * u_xlat10_4;
    u_xlat5 = u_xlat16_4 * _LightColor0;
    u_xlat0 = u_xlat5 * u_xlat0.xxxx + u_xlat1;
    u_xlat0 = u_xlat2 * vec4(vec4(_LightTexBrightness, _LightTexBrightness, _LightTexBrightness, _LightTexBrightness)) + u_xlat0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir1.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir1.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir1.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir1.wwww + u_xlat1;
    u_xlat2.x = dot(u_xlat1, u_xlat1);
    u_xlat2.x = inversesqrt(u_xlat2.x);
    u_xlat2.xyz = u_xlat1.xyz * u_xlat2.xxx;
    u_xlat3.w = vs_TEXCOORD2.w;
    u_xlat1 = (-u_xlat3) + SpotLightPos1;
    u_xlat5.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat5.xyz;
    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat29 = inversesqrt(u_xlat29);
    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;
    u_xlat2.x = dot(u_xlat2.xyz, u_xlat5.xyz);
    u_xlat11 = abs(u_xlat2.x) * -0.0187292993 + 0.0742610022;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + -0.212114394;
    u_xlat11 = u_xlat11 * abs(u_xlat2.x) + 1.57072878;
    u_xlat20 = -abs(u_xlat2.x) + 1.0;
    u_xlatb2 = u_xlat2.x<(-u_xlat2.x);
    u_xlat20 = sqrt(u_xlat20);
    u_xlat29 = u_xlat20 * u_xlat11;
    u_xlat29 = u_xlat29 * -2.0 + 3.14159274;
    u_xlat2.x = u_xlatb2 ? u_xlat29 : float(0.0);
    u_xlat2.x = u_xlat11 * u_xlat20 + u_xlat2.x;
    u_xlat2.x = (-u_xlat2.x) * 57.2957802 + SpotLightAngle1;
    u_xlat2.x = max(u_xlat2.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor1;
    u_xlat1 = u_xlat2.xxxx * u_xlat16_1;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1, SpotLightBrightness1));
    u_xlat1 = u_xlat1 * u_xlat2;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_2 = vec4(SpotType1, SpotType2, SpotType3, SpotType4) + vec4(_UnLock);
    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);
    u_xlat1 = u_xlat1 * u_xlat16_2.xxxx;
    u_xlat5.x = float(spotLightCount);
    u_xlatb6 = greaterThanEqual(u_xlat5.xxxx, vec4(1.0, 2.0, 3.0, 4.0));
    u_xlatb5 = u_xlat5.x>=5.0;
    u_xlat5.x = u_xlatb5 ? 1.0 : float(0.0);
    u_xlat6 = mix(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0), vec4(u_xlatb6));
    u_xlat1 = u_xlat1 * u_xlat6.xxxx;
    u_xlat16_0 = u_xlat0 * _MainTexCol + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir2.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir2.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir2.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos2;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle2;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor2;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2, SpotLightBrightness2));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.yyyy * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.yyyy + u_xlat16_0;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir3.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir3.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir3.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir3.wwww + u_xlat1;
    u_xlat14.x = dot(u_xlat1, u_xlat1);
    u_xlat14.x = inversesqrt(u_xlat14.x);
    u_xlat14.xyz = u_xlat1.xyz * u_xlat14.xxx;
    u_xlat1 = (-u_xlat3) + SpotLightPos3;
    u_xlat7.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat7.xyz;
    u_xlat7.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat7.xyz;
    u_xlat6.x = dot(u_xlat7.xyz, u_xlat7.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat7.xyz = u_xlat6.xxx * u_xlat7.xyz;
    u_xlat14.x = dot(u_xlat14.xyz, u_xlat7.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle3;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor3;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3, SpotLightBrightness3));
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.zzzz * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.zzzz + u_xlat16_0;
    u_xlat1 = (-u_xlat3) + SpotLightPos4;
    u_xlat3 = (-u_xlat3) + SpotLightPos5;
    u_xlat14.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat1.xxx + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat1.zzz + u_xlat14.xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat1.www + u_xlat14.xyz;
    u_xlat6.x = dot(u_xlat14.xyz, u_xlat14.xyz);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat14.xyz = u_xlat14.xyz * u_xlat6.xxx;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir4.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir4.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir4.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir4.wwww + u_xlat1;
    u_xlat6.x = dot(u_xlat1, u_xlat1);
    u_xlat6.x = inversesqrt(u_xlat6.x);
    u_xlat6.xyz = u_xlat1.xyz * u_xlat6.xxx;
    u_xlat14.x = dot(u_xlat6.xyz, u_xlat14.xyz);
    u_xlat23 = abs(u_xlat14.x) * -0.0187292993 + 0.0742610022;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + -0.212114394;
    u_xlat23 = u_xlat23 * abs(u_xlat14.x) + 1.57072878;
    u_xlat32 = -abs(u_xlat14.x) + 1.0;
    u_xlatb14 = u_xlat14.x<(-u_xlat14.x);
    u_xlat32 = sqrt(u_xlat32);
    u_xlat6.x = u_xlat32 * u_xlat23;
    u_xlat6.x = u_xlat6.x * -2.0 + 3.14159274;
    u_xlat14.x = u_xlatb14 ? u_xlat6.x : float(0.0);
    u_xlat14.x = u_xlat23 * u_xlat32 + u_xlat14.x;
    u_xlat14.x = (-u_xlat14.x) * 57.2957802 + SpotLightAngle4;
    u_xlat14.x = max(u_xlat14.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor4;
    u_xlat1 = u_xlat14.xxxx * u_xlat16_1;
    u_xlat7 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(SpotLightBrightness4);
    u_xlat1 = u_xlat1 * u_xlat7;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat1 = u_xlat16_2.wwww * u_xlat1;
    u_xlat16_0 = u_xlat1 * u_xlat6.wwww + u_xlat16_0;
    u_xlat14.xyz = u_xlat3.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;
    u_xlat14.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * u_xlat3.xxx + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * u_xlat3.zzz + u_xlat14.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * u_xlat3.www + u_xlat3.xyz;
    u_xlat30 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat3.xyz = vec3(u_xlat30) * u_xlat3.xyz;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[1] * SpotLightDir5.yyyy;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[0] * SpotLightDir5.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[2] * SpotLightDir5.zzzz + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToObject[3] * SpotLightDir5.wwww + u_xlat1;
    u_xlat30 = dot(u_xlat1, u_xlat1);
    u_xlat30 = inversesqrt(u_xlat30);
    u_xlat14.xyz = u_xlat1.xyz * vec3(u_xlat30);
    u_xlat3.x = dot(u_xlat14.xyz, u_xlat3.xyz);
    u_xlat12 = abs(u_xlat3.x) * -0.0187292993 + 0.0742610022;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + -0.212114394;
    u_xlat12 = u_xlat12 * abs(u_xlat3.x) + 1.57072878;
    u_xlat21 = -abs(u_xlat3.x) + 1.0;
    u_xlatb3 = u_xlat3.x<(-u_xlat3.x);
    u_xlat21 = sqrt(u_xlat21);
    u_xlat30 = u_xlat21 * u_xlat12;
    u_xlat30 = u_xlat30 * -2.0 + 3.14159274;
    u_xlat3.x = u_xlatb3 ? u_xlat30 : float(0.0);
    u_xlat3.x = u_xlat12 * u_xlat21 + u_xlat3.x;
    u_xlat3.x = (-u_xlat3.x) * 57.2957802 + SpotLightAngle5;
    u_xlat3.x = max(u_xlat3.x, 0.0);
    u_xlat16_1 = u_xlat16_4 * SpotLightColor5;
    u_xlat2 = u_xlat16_4 * vec4(0.5, 0.5, 0.5, 0.5) + vec4(vec4(SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5, SpotLightBrightness5));
    u_xlat1 = u_xlat3.xxxx * u_xlat16_1;
    u_xlat1 = u_xlat2 * u_xlat1;
    u_xlat1 = u_xlat1 * vec4(0.00999999978, 0.00999999978, 0.00999999978, 0.00999999978);
    u_xlat16_8 = SpotType5 + _UnLock;
    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);
    u_xlat1 = u_xlat1 * vec4(u_xlat16_8);
    SV_Target0 = u_xlat1 * u_xlat5.xxxx + u_xlat16_0;
    return;
}

#endif
"
}
}
Program "fp" {
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "gles hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
}
}
}
Fallback "Mobile/Diffuse"
}